install.packages(CRAN)
install.packages("conjoint")
exit
quit
usethis::create_github_token()
install.packages("shiny")
install.packages("learnr")
#Github Test
library(tidyverse)
library(gapminder)
# View(gapminder)
View(gapminder)
gapminder |>
filter(continent == "Asia", year == 2007) |>
ggplot(aes(x = gdpPercap, y = lifeExp)) +
geom_point() +
scale_x_log10() +
labs(x = "GDP per capita", y = "Life expectancy",
title = "Life expectancy versus GDP in Asia in 2007") +
theme_bw()
View(gapminder)
head(gapminder)
gapminder |>
filter(continent == "Europe", year = 1957) |>
ggplot(aes(x = gdpPercap, y = lifeExp))+
geom_point()+
scale_x_log10()+
labs( x = "GDP Per Capita", y = "Life Expectancy",
title = "Life Expectancy Versus GDP Per Capita in Europe in 1957")+
theme_bw()
gapminder |>
filter(continent == "Europe", year == 1957) |>
ggplot(aes(x = gdpPercap, y = lifeExp))+
geom_point()+
scale_x_log10()+
labs( x = "GDP Per Capita", y = "Life Expectancy",
title = "Life Expectancy Versus GDP Per Capita in Europe in 1957")+
theme_bw()
gapminder |>
filter(continent == "Americas", year == 2007) |>
ggplot(aes(x = gdpPercap, y = lifeExp)) +
geom_point() +
scale_x_log10() +
labs(x = "GDP per capita", y = "Life expectancy",
title = "Life expectancy versus GDP in Asia in 2007") +
theme_bw()
gapminder |>
filter(continent == "Americas") |>
ggplot(aes(x = year, y = lifeExp))+
geom_point()
gapminder |>
filter(continent == "Americas") |>
ggplot(aes(x = year, y = lifeExp))+
geom_line()
gapminder |>
filter(continent == "Americas") |>
ggplot(aes(x = year, y = lifeExp))+
geom_line()+
geom_smooth()
gapminder |>
filter(continent == "Americas") |>
ggplot(aes(x = year, y = lifeExp))+
geom_smooth()
# Packages
library(tidyverse)
library(gapminder)
#| echo: true
#| fig-width: 10
#| fig-height: 4.5
gapminder |> filter(year == 2007) |>
ggplot(aes(x = gdpPercap, y = lifeExp)) +
geom_point()
#| echo: true
#| fig-width: 10
#| fig-height: 4.5
#| code-line-numbers: "4,5"
gapminder |> filter(year == 2007) |>
ggplot(aes(x = gdpPercap, y = lifeExp)) +
geom_point() +
labs(x = "GDP per capita", y = "Life expectancy",
title = "Life expectancy versus GDP in 2007")
#| echo: true
#| fig-width: 10
#| fig-height: 4.5
#| code-line-numbers: "4"
gapminder |> filter(year == 2007) |>
ggplot(aes(x = gdpPercap, y = lifeExp)) +
geom_point() +
scale_x_log10() +
labs(x = "GDP per capita", y = "Life expectancy",
title = "Life expectancy versus GDP in 2007")
#| echo: true
#| fig-width: 10
#| fig-height: 4.5
#| code-line-numbers: "2"
gapminder |> filter(year == 2007) |>
ggplot(aes(x = gdpPercap, y = lifeExp, size = pop)) +
geom_point() +
scale_x_log10() +
labs(x = "GDP per capita", y = "Life expectancy",
title = "Life expectancy versus GDP in 2007")
#| echo: true
#| fig-width: 10
#| fig-height: 4.5
#| code-line-numbers: "3"
gapminder |> filter(year == 2007) |>
ggplot(aes(x = gdpPercap, y = lifeExp, size = pop)) +
geom_point(alpha = 0.5) +
scale_x_log10() +
labs(x = "GDP per capita", y = "Life expectancy",
title = "Life expectancy versus GDP in 2007")
#| echo: true
#| fig-width: 10
#| fig-height: 4.5
#| code-line-numbers: "7"
gapminder |> filter(year == 2007) |>
ggplot(aes(x = gdpPercap, y = lifeExp, size = pop)) +
geom_point(alpha = 0.5) +
scale_x_log10() +
labs(x = "GDP per capita", y = "Life expectancy",
title = "Life expectancy versus GDP in 2007") +
theme_bw()
#| echo: true
#| fig-width: 10
#| fig-height: 4.5
#| code-line-numbers: "8"
gapminder |> filter(year == 2007) |>
ggplot(aes(x = gdpPercap, y = lifeExp, size = pop)) +
geom_point(alpha = 0.5) +
scale_x_log10() +
labs(x = "GDP per capita", y = "Life expectancy",
title = "Life expectancy versus GDP in 2007") +
theme_bw() +
facet_wrap(~ continent)
#| echo: true
#| fig-width: 10
#| fig-height: 4.5
#| code-line-numbers: "2"
gapminder |> filter(year == 2007) |>
ggplot(aes(x = gdpPercap, y = lifeExp, size = pop, color = continent)) +
geom_point(alpha = 0.5) +
scale_x_log10() +
labs(x = "GDP per capita", y = "Life expectancy",
title = "Life expectancy versus GDP in 2007") +
theme_bw() +
facet_wrap(~ continent)
library(gganimate)
#| echo: true
#| fig-width: 10
#| fig-height: 4.5
#| code-line-numbers: "6,9"
gapminder |>
ggplot(aes(x = gdpPercap, y = lifeExp, size = pop, color = continent)) +
geom_point(alpha = 0.5) +
scale_x_log10() +
labs(x = "GDP per capita", y = "Life expectancy",
title = "Life expectancy versus GDP in {frame_time}") +
theme_bw() +
facet_wrap(~ continent) +
transition_time(year)
gapminder |>
filter(continent == "Americas") |>
ggplot(aes(x = year, y = lifeExp))+
geom_smooth()+
scale_x_log10()
gapminder |>
filter(continent == "Americas") |>
ggplot(aes(x = year, y = lifeExp))+
geom_smooth()
gapminder |>
filter(continent == "Americas") |>
ggplot(aes(x = year, y = lifeExp))+
geom_smooth()+
scale_x_log10()+
labs (x = "Year", "Life Expectancy",
title = "Life Expectancy Over Time in the US")+
theme_bw()
#| echo: true
#| fig-width: 10
#| fig-height: 4.5
#| code-line-numbers: "6,9"
gapminder |>
ggplot(aes(x = gdpPercap, y = lifeExp, size = pop, color = continent)) +
geom_point(alpha = 0.5) +
scale_x_log10() +
labs(x = "GDP per capita", y = "Life expectancy",
title = "Life expectancy versus GDP in {frame_time}") +
theme_bw() +
facet_wrap(~ continent) +
transition_time(year)
library(tidyverse)
library(gapminder)
View(gapminder)
head(gapminder)
gapminder |>
filter(continent == "Asia", year == 2007) |>
ggplot(aes(x = gdpPercap, y = lifeExp)) +
geom_point() +
scale_x_log10() +
labs(x = "GDP per capita", y = "Life expectancy",
title = "Life expectancy versus GDP in Asia in 2007") +
theme_bw()
gapminder |>
filter(continent == "Europe", year == 1957) |>
ggplot(aes(x = gdpPercap, y = lifeExp))+
geom_point()+
scale_x_log10()+
labs( x = "GDP Per Capita", y = "Life Expectancy",
title = "Life Expectancy Versus GDP Per Capita in Europe in 1957")+
theme_bw()
gapminder |>
filter(continent == "Americas", year == 2007) |>
ggplot(aes(x = gdpPercap, y = lifeExp)) +
geom_point() +
scale_x_log10() +
labs(x = "GDP per capita", y = "Life expectancy",
title = "Life expectancy versus GDP in Asia in 2007") +
theme_bw()
gapminder |>
filter(continent == "Asia", year == 2007) |>
ggplot(aes(x = gdpPercap, y = lifeExp)) +
geom_point() +
scale_x_log10() +
labs(x = "GDP per capita", y = "Life expectancy",
title = "Life expectancy versus GDP in Asia in 2007") +
theme_bw()
gapminder |>
filter(continent == "Americas") |>
ggplot(aes(x = year, y = lifeExp))+
geom_smooth()+
scale_x_log10()+
labs (x = "Year", "Life Expectancy",
title = "Life Expectancy Over Time in the US")+
theme_bw()
# install.packages("tidyverse")
# install.packages("gapminder")
# install.packages("ggplot2)
# install.packages("datasauRus")
install.packages("tidyverse")
install.packages("gapminder")
install.packages("ggplot2")
install.packages("datasauRus")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("gapminder")
install.packages("datasauRus")
library(tidyverse)
library(datasauRus)
library(gapminder)
library(ggplot2)
?datasaurus_dozenj
?datasaurus_dozen
datasaurus_dozen |>
filter(dataset == "dino") -> dino_data
view(dino_data)
head(dino_data)
dino_data |>
ggplot(mapping = aes(x = x,y = y))+
geom_point()
dino_data |>
ggplot(mapping = aes(x = x,y = y))+
geom_point()+
labs(title = "Dinodata")
dino_data |>
ggplot(mapping = aes(x = x,y = y, colour = "blue"))+
geom_point()+
labs(title = "Dinodata")
dino_data |>
ggplot(mapping = aes(x = x,y = y))+
geom_point()+
labs(title = "Dinodata")
dino_data |>
ggplot(mapping = aes(x = x,y = y))+
geom_point(colour = "blue")+
labs(title = "Dinodata")
dino_data |>
ggplot(mapping = aes(x = x,y = y))+
geom_point(colour = "orange")+
labs(title = "Dinodata")
dino_data |>
ggplot(mapping = aes(x = x,y = y))+
geom_point(colour = "gold")+
labs(title = "Dinodata")
dino_data |>
ggplot(mapping = aes(x = x,y = y))+
geom_point(colour = "orange")+
labs(title = "Dinodata")
dino_data |>
ggplot(mapping = aes(x = x,y = y))+
geom_point(colour = "purple")+
labs(title = "Dinodata")
head(star_data)
### put your new star plot here
datasaurus_dozen |>
filter(dataset=="star") ->star_data
head(star_data)
star_data |>
ggplot(mapping = aes(x=x, y=y))+
geom_point(colour="purple")+
labs(title = "Star Data")
### put your new circle plot here
datasaurus_dozen |>
filter(dataset =="circle") -> circle_data
head(circle_data)
circle_data |>
ggplot(mapping = aes(x=x, y=y))+
geom_point(colour="purple")+
labs(title = "Circle Data")
datasaurus_dozen |>
ggplot(mapping = aes(x = x, y = y, colour = dataset))+
geom_point()+
facet_wrap(~ dataset)
datasaurus_dozen |>
ggplot(mapping = aes(x = x, y = y, colour = dataset))+
geom_point()+
facet_wrap(~ dataset)+
theme(legend.position = "none")+
labs(title = "Datasaurus Data")
summary(gapminder)
install.packages("skimr")
install.packages("skimr")
library(skimr)
gapminder |>
skim()
gapminder |>
summarise(mean(lifeExp))
?summarise
ggplot(gapminder, aes(x = continent, y = lifeExp)) +
geom_boxplot() +
geom_point()
ggplot(gapminder, aes(x = continent, y = lifeExp)) +
geom_boxplot() +
geom_jitter(position = position_jitter(width = 0.1, height = 0), alpha = .25)
ggplot(gapminder, aes(x = continent, y = lifeExp)) +
geom_boxplot() +
geom_jitter(position = position_jitter(width = 0.1, height = 0), alpha = .25, colour = "continent")
ggplot(gapminder, aes(x = continent, y = lifeExp)) +
geom_boxplot() +
geom_jitter(position = position_jitter(width = 0.1, height = 0), alpha = .25, colour = continent)
ggplot(gapminder, aes(x = continent, y = lifeExp)) +
geom_boxplot() +
geom_jitter(position = position_jitter(width = 0.1, height = 0), alpha = .25)
ggplot(gapminder, aes(x = continent, y = lifeExp)) +
geom_boxplot(colour = "continent") +
geom_jitter(position = position_jitter(width = 0.1, height = 0), alpha = .25)
ggplot(gapminder, aes(x = continent, y = lifeExp)) +
geom_boxplot() +
geom_jitter(position = position_jitter(width = 0.1, height = 0), alpha = .25)
ggplot(gapminder, aes(x = continent, y = lifeExp, colour = continent)) +
geom_boxplot() +
geom_point()
ggplot(gapminder, aes(x = continent, y = lifeExp, colour = continent)) +
geom_boxplot() +
geom_jitter(position = position_jitter(width = 0.1, height = 0), alpha = .25)
install.packages("DCEtool")
install.packages(c("MASS", "nlme", "survival"))
install.packages("DCEtool")
install.packages("shiny")
library(DCEtool)
library(shiny)
library(shiny)
# Let's load the necessary packages
library(DCEtool)
library(shiny)
DCEtool::DCEtool()
# Let's start the DCE tool
DCEtool::DCEtool()
# Let's load the necessary packages
library(DCEtool)
library(shiny)
# Let's start the DCE tool
DCEtool::DCEtool()
# Let's start the DCE tool
DCEtool::DCEtool()
# Let's start the DCE tool
DCEtool::DCEtool()
# Let's start the DCE tool
DCEtool::DCEtool()
# Let's start the DCE tool
DCEtool::DCEtool()
# Let's start the DCE tool
DCEtool::DCEtool()
# Let's start the DCE tool
DCEtool::DCEtool()
quit
exit
DCEtool::DCEtool()
DCEtool::DCEtool()
1 - pbinom(55, size = 100, prob = 0.5)
# Set the seed
set.seed(8675309)
# Generate 1 random standard Uniform variable
runif(1, min = 0, max = 1)
#| message: false
#| warning: false
library(tidyverse)
library(estimatr)
# This function runs one gift card experiment
run_one_experiment <- function(success_prob_control = 0.65,
success_prob_treat = 0.80,
N = 100,
treat_prob = 0.50){
# Generate potential outcomes
Y0 <- rbinom(N, size = 1, prob = success_prob_control)
Y1 <- rbinom(N, size = 1, prob = success_prob_treat)
# Generate treatment assignment
Z <- rbinom(N, size = 1, prob = treat_prob)
Z_bar <- mean(Z)
# Generate observed outcomes
Yobs <- ifelse(Z, Y1, Y0)
# Generate gift card data frame
gift_card_data <- tibble(Y = Yobs, Z = Z)
# Estimate effect
gift_card_lm <- lm_robust(Y ~ Z, data = gift_card_data) |> tidy()
# Return output
return(c(Z_bar = Z_bar,
gift_card_lm |> filter(term == "Z") |> select(estimate, std.error, p.value))
)
}
run_one_experiment(success_prob_control = 0.65,
success_prob_treat = 0.80,
N = 100,
treat_prob = 0.50)
set.seed(05041994)
run_one_experiment(success_prob_control = 0.65,
success_prob_treat = 0.80,
N = 100,
treat_prob = 0.50)
run_many_experiments <- function(num_experiments = 1000,
success_prob_control = 0.65,
success_prob_treat = 0.80,
N = 100,
treat_prob = 0.50){
replicate(num_experiments,
unlist(run_one_experiment(success_prob_control = success_prob_control,
success_prob_treat = success_prob_treat,
N = N,
treat_prob = treat_prob))) |>
t() |>
as_tibble()
}
my_experiments <- run_many_experiments(num_experiments = 1000,
success_prob_control = 0.65,
success_prob_treat = 0.80,
N = 100,
treat_prob = 0.50)
ggplot(my_experiments, aes(x = Z_bar)) + geom_histogram() + theme_bw() +
labs(x = "Proportion Treated")
my_experiments |> summarize(mean(Z_bar))
my_experiments |> summarize(mean(Z_bar >= 0.50))
my_experiments |> summarise(mean(Z_bar >=0.55))
setwd("/Users/jsupeyo/Library/CloudStorage/GoogleDrive-jsupeyo@berkeley.edu/My Drive/University of California, Berkeley/1. Goldman School of Public Policy/1. Classes/2. 2024 Fall/PUB POL 249: Statistics for Program Evaluation/Assignments/Code/Statistics4PE")
library(tidyverse)
library(dplyr)
library(ggplot2)
library(tidyverse)
read.csv(TN_STAR_reduced.csv) ->star_data
read.csv("TN_STAR_reduced.csv") ->star_data
head(star_data)
view(star_data)
head(star_data)
star_data |>
summarise(mean(treat==1))
star_data |>
summarise(mean(treat==0))
# Control grou, n
star_data |>
summarise(count(treat==0))
# Control grou, n
star_data |>
count(treat==0)
# Control group, n
star_data |>
count(treat=!0)
# Control group, n
star_data |>
count(treat==0)
# Control group, mimimum
star_data |>
minimum(treat==0)
# Control group, mimimum
star_data |>
min(treat==0)
# Control group, mimimum
star_data |>
summarise(min(treat==0))
# Control group, mimimum
star_data |>
(min(treat==0))
# Control group, mimimum
star_data |>
min(treat==0)
?min
# Control group, mimimum
star_data |>
min(sapply(min))
# Control group, mimimum
star_data |>
select(treat==0)
# Control group, mimimum
star_data |>
select("treat==0")
# Control group, n
star_data |>
count(treat==0)
# Control group, mimimum
star_data |>
select(treat==0) |>
min()
# Control group, mean
star_data |>
min(treat==0)
