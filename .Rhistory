ggplot(aes(x = Weight_Class, y = Percentage, fill = Weight_Class))+
geom_bar(stat = "identity", width = 1)+
theme_minimal()+
geom_text(aes(label = paste0(round(Percentage, 0), "%")), hjust = -0.1)+
labs(title = "Distribution of Vehicle Type by Customer Organizations")+
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
axis.text.x = element_blank()) +
coord_flip() +
scale_fill_brewer(palette = "Blues", direction = -1) +
theme(legend.position = "none")
evse_for_employees <- national_data [190:193,] # Subset the national data
evse_for_employees[, 4] <- evse_for_employees [, 4]*100 # convert the column four into a percentage from a decimal
colnames(evse_for_employees) <- c("Response_Code", "organization_interest", "Total_Respondents", "Percentage") # Rename the column headers
evse_for_employees<- evse_for_employees[-1,] # Remove the first column to avoid duplication of the column header
print(evse_for_employees)
# Let's plot
evse_for_employees$organization_interest <- stringr::str_wrap(evse_for_employees$organization_interest, width = 20) # Wrap the text to ease plotting and readability
evse_for_employees |>
ggplot(aes(x = organization_interest, y = Percentage, fill = organization_interest))+
geom_bar(stat = "identity", width = 1)+
theme_minimal()+
geom_text(aes(label = paste0(round(Percentage, 0), "%")), hjust = -0.1)+
labs(title = "Distribution of Organization Interest in EVSE for Employees")+
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
axis.text.x = element_blank()) +
coord_flip() +
scale_fill_brewer(palette = "Blues", direction = -1) +
theme(legend.position = "none")
evse_for_customers <- national_data [202:205,] # subset the national data
evse_for_customers [, 4] <- evse_for_customers [ , 4]*100 # Convert the last column from decimal to percentage
colnames(evse_for_customers) <- c("Response_Code", "Organization_Interest", "Total_Respondents", "Percentage") # Rename the columns
evse_for_customers <- evse_for_customers[-1,] # Remove the duplicated first row
print(evse_for_customers)
# Let's plot
evse_for_customers <- evse_for_customers |>
arrange(desc(Percentage)) |>
mutate(Organization_Interest = factor(Organization_Interest, levels = Organization_Interest)) # Reorder in descending order
# Wrap the long text
evse_for_customers$Organization_Interest <- stringr::str_wrap(evse_for_customers$Organization_Interest, width = 20) # Wrap the text to ease plotting and readability
evse_for_customers |>
ggplot(aes(x = Organization_Interest, y = Percentage, fill = Organization_Interest))+
geom_bar(stat = "identity", width = 1)+
theme_minimal()+
geom_text(aes(label = paste0(round(Percentage, 0), "%")), hjust = -0.1)+
labs(title = "Distribution of Organization Interest in EVSE for Customers and/or Visitors")+
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
axis.text.x = element_blank()) +
coord_flip() +
scale_fill_brewer(palette = "Blues", direction = -1) +
theme(legend.position = "none")
# Load the libraries
library(readxl)
library(tidyverse)
library(skimr)
library(ggplot2)
library(RColorBrewer)
library(ggrepel)
library(stringr)
library(scales)
# Set the working directory
setwd("/Users/jsupeyo/Library/CloudStorage/GoogleDrive-jksupeyo@lbl.gov/My Drive/Berkeley Lab/1. Research/Co-Located Project/Task 3/Task_3_Code/Commercial Survey Crosstabs/National")
file_path <- file.choose() # Select the file to work on
national_data <- read_excel(file_path, sheet = "All") # Read the Excel file using the selection path
# Explore the data
skim(national_data)
job_description <- national_data[5:12,] # Subset the data and label it
job_description[, 4] <- job_description [, 4] * 100 # Convert the last column from decimal to percentage
colnames(job_description) # view the column names
colnames(job_description) <- c("Response_Code","Job_Name", "Total_Respondents", "Percentage" ) # Rename the columns as per the question
job_description <- job_description [-1,] # Remove the first row to eliminate repetition of the column name
print(job_description) # view the data
#Let's make some plots
# Let's reorder the data frame based on percentage
job_description <- job_description |>
arrange(desc(Percentage)) |> # Sort by percentage in descending order
mutate(Job_Name = factor(Job_Name, levels = Job_Name)) # Reorder factor levels
# Now let's plot
ggplot(job_description, aes(x = "", y= Percentage, fill=Job_Name))+
geom_bar(stat = "identity", # Used when we are working with pre-computed y-values in this case percentages
width = 1)+
coord_polar("y", start = 0)+
theme_void()+ # Remove background and axis lines
labs(title = "Pie Chart of Job Descriptions")+
geom_text(aes(label = ifelse(Percentage > 2.5, # "ifelse" condition to only display labels for pie-slices larger than 2.5%
paste0(round(Percentage, 1), "%"),"")), # Round the percentage to 1 decimal place and append a % symbol
position = position_stack(vjust = 0.5)) + # Center the labels on the pie slices
scale_fill_brewer(palette = "Blues", # select a color palette
direction = -1 ) # Reverse the color scale such that the darkest color represents the highest percentage
floorspace_activities <- national_data[22:37,] # Subset the data and label it
floorspace_activities [, 4] <- floorspace_activities [, 4] * 100 # Convert the last column from decimal to percentage
#view the column names
colnames(floorspace_activities)
# Rename the column names
colnames(floorspace_activities) <- c("Response_Code","Floor_Space_Activity", "Total_Respondents", "Percentage")
floorspace_activities <- floorspace_activities [-1,] # Remove the first row to eliminate repetition of the column name
print(floorspace_activities)
#Let's make some plots
# Replace the long label on healthcare
floorspace_activities <- floorspace_activities |>
mutate(Floor_Space_Activity = str_replace(Floor_Space_Activity,
fixed("Health Care Includes both inpatient (services involving overnight care) and outpatient services"),
"Health Care"))
# Reorder the floor space activity factor based on the percentages
floorspace_activities <- floorspace_activities |>
mutate(Floor_Space_Activity = fct_reorder(Floor_Space_Activity, Percentage, .desc = FALSE))
# Start plotting
floorspace_activities |>
ggplot(aes(x = Floor_Space_Activity,
y = Percentage))+
labs(title = "Floor Space Activities")+ # label the title for the plot
geom_bar(stat = "identity", fill= "#00a2e0")+ # Add colour to the plot
theme_minimal()+ # select a theme for the plot
theme(axis.text.y = element_text(),
axis.text.x = element_blank(),
panel.grid.major = element_blank(), # Remove the major gridlines
panel.grid.minor = element_blank())+ # Remove the minor gridlines
coord_flip()+ # Flip the axes to create a better looking plot
geom_text(aes(label = paste0(round(Percentage, 0), "%")), # Round the values and add the percent symbol
hjust = -0.1, # position of label slightly outside the right end of the bar
size = 3) # font size of the percentage labels
total_square_footage <- national_data[46:55,] # subset the data as per the question
total_square_footage [, 4] <- total_square_footage [, 4]* 100 # Convert column 4 from decimal to percentage
colnames(total_square_footage) <- c("Response_Code","Floor_Space_Size", "Total_Respondents", "Percentage") # Rename the column names
total_square_footage <- total_square_footage [-1,] # Remove the first row to eliminate repetition of the column name
print(total_square_footage)
# Reorder floor space size based on percentage
total_square_footage <- total_square_footage |>
arrange(desc(Percentage))
total_square_footage <- total_square_footage |>
mutate(Floor_Space_Size = fct_reorder(Floor_Space_Size, Percentage, .desc = FALSE))
# Now let's make the plot
total_square_footage |>
ggplot(aes(x = Floor_Space_Size, y = Percentage))+
geom_bar(stat = "identity",
fill = "#002e6d")+ # One of my favourite colors!
labs(title = "Total Square Footage of Building Size",
x = "Floor Space Size in sqft",
y = "Percentage")+
theme_minimal()+
coord_flip()+
geom_text(aes(label = paste0(round(Percentage, 0), "%")),
hjust = -0.1)+
theme(panel.grid = element_blank(), # remove the grid
axis.text.x = element_blank()) # remove the label and ticks on the x-axis
familiarity_solar <- national_data [64:67,] # subset the data
familiarity_solar [, 4] <- familiarity_solar [, 4]* 100 # convert the last column from decimal to percentage
colnames(familiarity_solar) <- c("Response_Code","Familiarity_Level", "Total_Respondents", "Percentage") # Rename the columns
familiarity_solar <- familiarity_solar[-1,] # Remove the first row with repeated column names
print(familiarity_solar)
# Let's plot
familiarity_solar |>
filter(Percentage !=0) |> # filter to keep only rows where percentage is not equal to zero
ggplot(aes(x = "", y= Percentage, fill = Familiarity_Level))+
geom_bar(stat = "identity", width = 1)+ # bar chart
coord_polar(theta = "y")+ # convert the bar chart into a pie chart mapped to the y-value
geom_text(aes(label = paste0(round(Percentage, 0),"%")),position = position_stack(vjust = 0.5),
color = "white")+ # use font color white to contrast the text with the color
scale_fill_manual(values = c("#002e6d", "steelblue"))+
labs(title = "Distribution of Familiarity Level of Solar Technology")+
theme_void() # remove the axis lines and background
familiarity_Battery <- national_data [76:79,] # subset the data
familiarity_Battery [,4] <- familiarity_Battery [, 4]*100 # Convert the last column from decimal to percentage
colnames(familiarity_Battery) <- c("Response_Code","Familiarity_Level", "Total_Respondents", "Percentage") # Rename the columns
familiarity_Battery <- familiarity_Battery[-1,] # Remove the first row with repeated column names
print(familiarity_Battery)
# Let's plot
# Reorder the levels of Familiarity_Level to "High", "Medium", "Low"
familiarity_Battery <- familiarity_Battery |>
mutate(Familiarity_Level = factor(Familiarity_Level, levels = c("High", "Medium", "Low")))
# Plot
familiarity_Battery |>
ggplot(aes( x = "", y = Percentage, fill = Familiarity_Level))+
geom_bar(stat = "identity", width = 1)+
coord_polar(theta = "y")+
geom_text(aes(label = paste0(round(Percentage, 0), "%")),
position = position_stack(vjust = 0.5),
color = "white")+
labs(title = "Distribution of Familiarity Level of Battery Technology (BESS)")+
scale_fill_manual(values = c("#002e6d", "steelblue", "skyblue"))+
theme_void()
familiarity_evse <- national_data[89:91,] #Subset the data
familiarity_evse [,4] <- familiarity_evse [,4]*100 # Convert the last column into percentage from decimal
colnames(familiarity_evse) <- c("Response_Code","Familiarity_Level", "Total_Respondents", "Percentage") # Rename the columns
print(familiarity_evse)
# Reorder the levels of familiarity level to descending order
familiarity_evse <- familiarity_evse |>
mutate(Familiarity_Level = factor(Familiarity_Level, levels = c ("High", "Medium", "Low")))
# Plot
familiarity_evse |>
ggplot(aes(x = "", y = Percentage, fill = Familiarity_Level))+
geom_bar(stat = "identity", width = 1)+
coord_polar(theta = "y")+
geom_text(aes(label = paste0(round(Percentage, 0), "%")),
position = position_stack(vjust = 0.5),
color = "white" )+
labs(title = "Distribution of Familiarity Level by Electric Vehicle Charging Infrastructure (EVSE)")+
scale_fill_manual(values = c("#002e6d", "steelblue", "skyblue"))+
theme_void()
familiarity_off_road <- national_data [100:103,] #subset the data
familiarity_off_road [, 4] <- familiarity_off_road [, 4] * 100 # convert the last column from decimal to %age
colnames(familiarity_off_road) <- c("Response_Code","Familiarity_Level", "Total_Respondents", "Percentage") #rename the columns for ease of analysis & plotting
familiarity_off_road <- familiarity_off_road [-1,] # remove the first row to avoid duplication with the column labels
familiarity_off_road <- familiarity_off_road |>
mutate(Familiarity_Level = factor(Familiarity_Level, levels = c("High", "Medium", "Low"))) # Reorder the levels of familiarity to high, medium, and low
# Plot
familiarity_off_road |>
ggplot(aes( x = "", y = Percentage, fill = Familiarity_Level))+
geom_bar(stat = "identity", width = 1)+
coord_polar(theta = "y")+
geom_text(aes(label = paste0(round(Percentage, 0), "%")),
position = position_stack(vjust = 0.5),
color = "white")+
labs(title = "Distribution of Familiarity Level of Electric Vehicles with Off-Road Capabilities")+
scale_fill_manual(values = c("#002e6d", "steelblue", "skyblue"))+
theme_void()
rooftop_solar_interest <- national_data[112:115,] #subset national data
rooftop_solar_interest [, 4] <- rooftop_solar_interest [, 4]*100 #convert the last column into a percentage
colnames(rooftop_solar_interest) <- c("Response_Code","Level_of_Interest", "Total_Respondents", "Percentage") #Rename the columns
rooftop_solar_interest <- rooftop_solar_interest[-1,] # Remove the first row to avoid duplication with the column labels
rooftop_solar_interest<-rooftop_solar_interest |>
mutate(Level_of_Interest = factor(Level_of_Interest, levels = c("Currently have or in process of acquiring", "Might be interested", "Not interested"))) #reorder the levels of interest
print(rooftop_solar_interest)
# Plot
rooftop_solar_interest$Level_of_Interest <- stringr::str_wrap(rooftop_solar_interest$Level_of_Interest, width = 20) # Wrap long text to ease readability and plotting
rooftop_solar_interest |>
ggplot(aes( x = Level_of_Interest, y = Percentage, fill = Level_of_Interest))+
geom_bar(stat = "identity", width = 1)+
theme_minimal()+
geom_text(aes(label = paste0(round(Percentage, 0), "%")),
hjust = -0.1)+
labs(title = "Distribution of Interest in On-Site Rooftop Solar")+
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
axis.text.x = element_blank())+
coord_flip()+
scale_fill_brewer(palette = "Blues", direction = -1)+
theme(legend.position = "none")
carport_solar_interest <- national_data[124:127,] #subset the national data
print(carport_solar_interest)
carport_solar_interest [, 4] <- carport_solar_interest [, 4]*100 # Convert the last column from decimal to %age
colnames(carport_solar_interest) <- c("Response_Code", "Level_of_Interest", "Total_Respondents", "Percentage") # Rename the columns
carport_solar_interest <- carport_solar_interest [-1,] # Deduplicate the first row from the column titles/name
carport_solar_interest <- carport_solar_interest |>
arrange(desc(Percentage)) |>
mutate(Level_of_Interest = factor(Level_of_Interest, levels = Level_of_Interest)) #reorder the levels of interest
print(carport_solar_interest)
carport_solar_interest$Level_of_Interest <- stringr::str_wrap(carport_solar_interest$Level_of_Interest, width = 20) #Wrap text to ease plotting and readability
# Plot
carport_solar_interest |>
ggplot(aes(x = Level_of_Interest, y = Percentage, fill = Level_of_Interest))+
geom_bar(stat = "identity", width = 1)+
theme_minimal()+
geom_text(aes(label = paste0(round(Percentage, 0), "%")), hjust = -0.1)+
labs(title = "Distribution of Interest in On-Site Carport Solar")+
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
axis.text.x = element_blank())+
coord_flip()+
scale_fill_brewer(palette = "Blues", direction = -1)+
theme(legend.position = "none")
onsite_ground_mounted_solar_interest <- national_data [136:139,] # subset the data
onsite_ground_mounted_solar_interest[, 4] <- onsite_ground_mounted_solar_interest[, 4]*100 # Convert the last column from decimal to percentage
colnames(onsite_ground_mounted_solar_interest) <- c("Response_Code", "Level_of_Interest", "Total_Respondents", "Percentage") #rename the column titles
onsite_ground_mounted_solar_interest<- onsite_ground_mounted_solar_interest[-1,] # Remove the first row to avoid duplication with the column headers
onsite_ground_mounted_solar_interest <- onsite_ground_mounted_solar_interest |>
arrange(desc(Percentage)) |>
mutate(Level_of_Interest = factor(Level_of_Interest, levels = Level_of_Interest)) #Arrange by descending order
print(onsite_ground_mounted_solar_interest)
# Let's plot
onsite_ground_mounted_solar_interest$Level_of_Interest <- stringr::str_wrap(onsite_ground_mounted_solar_interest$Level_of_Interest, width = 20)
# Plot
onsite_ground_mounted_solar_interest |>
ggplot(aes(x = Level_of_Interest, y = Percentage, fill = Level_of_Interest))+
geom_bar(stat = "identity", width = 1)+
theme_minimal()+
geom_text(aes(label = paste0(round(Percentage, 0), "%")), hjust = -0.1) +
labs(title = "Distribution of Interest in On-Ground Mounted Solar") +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
axis.text.x = element_blank()) +
coord_flip() +
scale_fill_brewer(palette = "Blues", direction = -1) +
theme(legend.position = "none")
off_site_solar_interest <- national_data [148:151,] # subset the data
off_site_solar_interest[, 4] <- off_site_solar_interest[, 4]*100 # Convert the last column from decimal to percentage
colnames(off_site_solar_interest) <- c("Response_Code", "Level_of_Interest", "Total_Respondents", "Percentage") #rename the column titles
off_site_solar_interest<- off_site_solar_interest[-1,] # Remove the first row to avoid duplication with the column headers
off_site_solar_interest <- off_site_solar_interest |>
arrange(desc(Percentage)) |>
mutate(Level_of_Interest = factor(Level_of_Interest, levels = Level_of_Interest)) #Arrange by descending order
print(off_site_solar_interest)
# Let's plot
off_site_solar_interest$Level_of_Interest <- stringr::str_wrap(off_site_solar_interest$Level_of_Interest, width = 20) # Wrap the text to ease plotting and readability
# Plot
off_site_solar_interest |>
ggplot(aes(x = Level_of_Interest, y = Percentage, fill = Level_of_Interest))+
geom_bar(stat = "identity", width = 1)+
theme_minimal()+
geom_text(aes(label = paste0(round(Percentage, 0), "%")), hjust = -0.1) +
labs(title = "Distribution of Interest in On-Ground Mounted Solar") +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
axis.text.x = element_blank()) +
coord_flip() +
scale_fill_brewer(palette = "Blues", direction = -1) +
theme(legend.position = "none")
fleet_size <- national_data[160:164,] #Subset the national data
fleet_size [,4] <- fleet_size [,4]*100 # convert the last column from decimal to percentage
colnames(fleet_size) <- c("Response_Code", "Fleet_Type", "Total_Respondents", "Percentage") #Rename the column headers
fleet_size <- fleet_size [-1,] # Remove the top row to deduplicate the column header
fleet_size <- fleet_size |>
arrange(desc(Percentage)) |>
mutate(Fleet_Type = factor(Fleet_Type, levels = Fleet_Type)) # Reorder the fleet type in descending order
print(fleet_size)
#Plot
fleet_size |>
ggplot(aes(x = Fleet_Type, y = 1, size = Percentage, fill = Percentage))+
geom_point(shape = 21, color = "black")+
geom_text(aes(label= paste0(round(Percentage, 0), "%")), vjust = -3, size = 4)+
scale_size_area(max_size = 20)+
scale_fill_gradient(low = "lightblue", high = "blue")+
labs(title = "Distribution of Fleet Types in Organizations",
size = "Percentage")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1.4),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
panel.grid = element_blank(),
legend.position = "none")
customer_onroad_fleet <- national_data [173:181,] # subset national data
customer_onroad_fleet [,4] <- customer_onroad_fleet [,4]*100 # Convert the last column to percentage
colnames(customer_onroad_fleet) <- c("Response_Code", "Weight_Class", "Total_Respondents", "Percentage") # Rename the column headers
customer_onroad_fleet <- customer_onroad_fleet[-1,] #Deduplicate the first row
customer_onroad_fleet <- customer_onroad_fleet |>
arrange(desc(Percentage)) |>
mutate(Weight_Class = factor(Weight_Class, levels = Weight_Class)) # Reorder in descending order
print(customer_onroad_fleet)
# Plot
customer_onroad_fleet |>
ggplot(aes(x = Weight_Class, y = Percentage, fill = Weight_Class))+
geom_bar(stat = "identity", width = 1)+
theme_minimal()+
geom_text(aes(label = paste0(round(Percentage, 0), "%")), hjust = -0.1)+
labs(title = "Distribution of Vehicle Type by Customer Organizations")+
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
axis.text.x = element_blank()) +
coord_flip() +
scale_fill_brewer(palette = "Blues", direction = -1) +
theme(legend.position = "none")
evse_for_employees <- national_data [190:193,] # Subset the national data
evse_for_employees[, 4] <- evse_for_employees [, 4]*100 # convert the column four into a percentage from a decimal
colnames(evse_for_employees) <- c("Response_Code", "organization_interest", "Total_Respondents", "Percentage") # Rename the column headers
evse_for_employees<- evse_for_employees[-1,] # Remove the first column to avoid duplication of the column header
print(evse_for_employees)
# Let's plot
evse_for_employees$organization_interest <- stringr::str_wrap(evse_for_employees$organization_interest, width = 20) # Wrap the text to ease plotting and readability
evse_for_employees |>
ggplot(aes(x = organization_interest, y = Percentage, fill = organization_interest))+
geom_bar(stat = "identity", width = 1)+
theme_minimal()+
geom_text(aes(label = paste0(round(Percentage, 0), "%")), hjust = -0.1)+
labs(title = "Distribution of Organization Interest in EVSE for Employees")+
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
axis.text.x = element_blank()) +
coord_flip() +
scale_fill_brewer(palette = "Blues", direction = -1) +
theme(legend.position = "none")
evse_for_customers <- national_data [202:205,] # subset the national data
evse_for_customers [, 4] <- evse_for_customers [ , 4]*100 # Convert the last column from decimal to percentage
colnames(evse_for_customers) <- c("Response_Code", "Organization_Interest", "Total_Respondents", "Percentage") # Rename the columns
evse_for_customers <- evse_for_customers[-1,] # Remove the duplicated first row
print(evse_for_customers)
# Let's plot
evse_for_customers <- evse_for_customers |>
arrange(desc(Percentage)) |>
mutate(Organization_Interest = factor(Organization_Interest, levels = Organization_Interest)) # Reorder in descending order
# Wrap the long text
evse_for_customers$Organization_Interest <- stringr::str_wrap(evse_for_customers$Organization_Interest, width = 20) # Wrap the text to ease plotting and readability
evse_for_customers |>
ggplot(aes(x = Organization_Interest, y = Percentage, fill = Organization_Interest))+
geom_bar(stat = "identity", width = 1)+
theme_minimal()+
geom_text(aes(label = paste0(round(Percentage, 0), "%")), hjust = -0.1)+
labs(title = "Distribution of Organization Interest in EVSE for Customers and/or Visitors")+
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
axis.text.x = element_blank()) +
coord_flip() +
scale_fill_brewer(palette = "Blues", direction = -1) +
theme(legend.position = "none")
evse_for_business_use <- national_data[214:217,] # Subset national data
evse_for_business_use[, 4] <- evse_for_business_use [, 4]*100 #Convert the last column from decimal to percentage
colnames(evse_for_business_use) <- c("Response_Code", "Organization_Interest", "Total_Respondents", "Percentage") # Rename the columns
evse_for_business_use <- evse_for_business_use[-1,] # Remove the duplicate top row
print(evse_for_business_use)
# Let's plot
evse_for_business_use$Organization_Interest <- stringr:: str_wrap(evse_for_business_use$Organization_Interest, width = 20) # Wrap the long text to ease readability and plotting
# Plot
evse_for_business_use |>
ggplot(aes(x = Organization_Interest, y = Percentage, fill = Organization_Interest))+
geom_bar(stat = "identity", width = 1)+
theme_minimal()+
geom_text(aes(label = paste0(round(Percentage, 0), "%")), hjust = -0.1)+
labs(title = "Distribution of Organization Interest in EVSE for Business Vehicles (as part of the org's fleet of 15 or more vehicles")+
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
axis.text.x = element_blank())+
coord_flip()+
scale_fill_brewer(palette = "Blues", direction = -1)+
theme(legend.position = "none")
setwd("~/Library/CloudStorage/GoogleDrive-jsupeyo@berkeley.edu/My Drive/University of California, Berkeley/1. Goldman School of Public Policy/1. Classes/2. 2024 Fall/PUB POL 249: Statistics for Program Evaluation/Assignments/Code/Statistics4PE")
rm(list=ls())
# Load Libraries
library(dplyr)
library(estimatr)
library(ggplot2)
library(readr)
# Set working directory
setwd("~/Library/CloudStorage/GoogleDrive-jsupeyo@berkeley.edu/My Drive/
University of California, Berkeley/1. Goldman School of Public
Policy/1. Classes/2. 2024 Fall/PUB POL 249: Statistics for Program
Evaluation/Assignments/Code/Statistics4PE")
## Load March 2023 CPS data (CA only)
cps <- read_csv("section07_data.csv")
## Generate variables for analysis
# Food stamp receipt
cps <- cps %>%
mutate(f_snap = ifelse(f_mv_fs>0, 1, 0))
# Race/ethnic categories
cps <- cps %>%
mutate(racecat = case_when(
prdtrace==1 & pehspnon==2 ~ 1,
prdtrace==2 & pehspnon==2 ~ 2,
prdtrace==4 & pehspnon==2 ~ 3,
pehspnon==1 ~ 4,
!(prdtrace %in% c(1, 2, 4)) & pehspnon==2 ~ 5
))
# Check
cps %>%
group_by(racecat) %>%
summarize(unweighted_count = n(), weighted_count = sum(marsupwt))
# Share who work, by SNAP receipt and race
r <- cps %>%
group_by(f_snap, racecat) %>%
summarize(avg_wkswork = mean(wkswork))
# Plot this data
r %>%
ggplot(aes(x=factor(racecat), fill=factor(f_snap), y=avg_wkswork)) +
geom_bar(stat="identity", position=position_dodge()) +
scale_x_discrete(labels = c("White, NH", "Black, NH", "Asian, NH", "Hispanic", "Other, NH")) +
labs(title="Weeks Worked by Race and SNAP Participation",
x="Race/Ethnic Group",
y="Avg Weeks Worked",
fill="SNAP") +
theme_minimal()
## Regress employment outcomes on SNAP receipt
ols <- lm_robust(wkswork ~ f_snap, data=cps)
summary(ols)
# If you want to try working on creating a matched sample (we'll do this next week!)
install.packages("MatchIt")
library(MatchIt)
? matchit
rm(list=ls())
# Load Libraries
library(dplyr)
library(estimatr)
library(ggplot2)
library(readr)
## Load March 2023 CPS data (CA only)
cps <- read_csv("section07_data.csv")
## Generate variables for analysis
# Food stamp receipt
cps <- cps %>%
mutate(f_snap = ifelse(f_mv_fs>0, 1, 0))
View(cps)
# Race/ethnic categories
cps <- cps %>%
mutate(racecat = case_when(
prdtrace==1 & pehspnon==2 ~ 1,
prdtrace==2 & pehspnon==2 ~ 2,
prdtrace==4 & pehspnon==2 ~ 3,
pehspnon==1 ~ 4,
!(prdtrace %in% c(1, 2, 4)) & pehspnon==2 ~ 5
))
